<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="namespaceChipChipArray" kind="namespace">
    <compoundname>ChipChipArray</compoundname>
    <innerclass refid="classChipChipArray_1_1Block" prot="public">ChipChipArray::Block</innerclass>
    <innerclass refid="classChipChipArray_1_1Grabber" prot="public">ChipChipArray::Grabber</innerclass>
    <innerclass refid="classChipChipArray_1_1Log" prot="public">ChipChipArray::Log</innerclass>
    <innerclass refid="classChipChipArray_1_1PiCamera" prot="public">ChipChipArray::PiCamera</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceChipChipArray_1a7fc3d1edffca11531cd09fdab7c8b88d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ChipChipArray::main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This program was used before <ref refid="cv__shape_8cpp" kindref="compound">cv_shape.cpp</ref> was written to find HSV ranges for the different color blocks. This is a slightly modified version of some code written by Shermal Fernando in the blog post &quot;Color Detection &amp; Object Tracking&quot; at <ulink url="http://opencv-srf.blogspot.com/2010/09/object-detection-using-color-seperation.html">http://opencv-srf.blogspot.com/2010/09/object-detection-using-color-seperation.html</ulink>". </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/chip-chip-array/src/cv_hue.cpp" line="20" column="1" bodyfile="/home/pi/chip-chip-array/src/cv_hue.cpp" bodystart="20" bodyend="109"/>
        <references refid="classChipChipArray_1_1PiCamera_1a58fb0de02570dce9a9cb60a1a04fb84f" compoundref="PiCamera_8hpp" startline="61" endline="69">ChipChipArray::PiCamera::Snap</references>
      </memberdef>
      <memberdef kind="function" id="namespaceChipChipArray_1a6c7465049b5d408e1a238b6d8ffa887d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="definitions_8hpp_1abc05a0f46084a3477cf5d5c939ff1436" kindref="member">Color</ref></type>
        <definition>Color ChipChipArray::ScanQR</definition>
        <argsstring>()</argsstring>
        <name>ScanQR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function manuvers arm to look at the QR code on a train car as the robot is backing up to the car. It attempts to find the code in multiple images before finally throwing an exeption if a code is not found. If multiple codes are found, it returns a single Color by (seemingly) arbitrary decision.</para><para>This function is based on code written by Michael Young (<ulink url="https://github.com/ayoungprogrammer/WebcamCodeScanner">https://github.com/ayoungprogrammer/WebcamCodeScanner</ulink>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/chip-chip-array/src/ScanQR.hpp" line="24" column="1" bodyfile="/home/pi/chip-chip-array/src/ScanQR.hpp" bodystart="24" bodyend="86"/>
        <references refid="classChipChipArray_1_1PiCamera_1a58fb0de02570dce9a9cb60a1a04fb84f" compoundref="PiCamera_8hpp" startline="61" endline="69">ChipChipArray::PiCamera::Snap</references>
        <references refid="definitions_8hpp_1abc05a0f46084a3477cf5d5c939ff1436aee38e4d5dd68c4e440825018d549cb47">Red</references>
        <references refid="definitions_8hpp_1abc05a0f46084a3477cf5d5c939ff1436a51e6cd92b6c45f9affdc158ecca2b8b8">Yellow</references>
        <references refid="definitions_8hpp_1abc05a0f46084a3477cf5d5c939ff1436ad382816a3cbeed082c9e216e7392eed1">Green</references>
        <references refid="definitions_8hpp_1abc05a0f46084a3477cf5d5c939ff1436a9594eec95be70e7b1710f730fdda33d9">Blue</references>
        <referencedby refid="qr__test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="qr__test_8cpp" startline="16" endline="42">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/pi/chip-chip-array/src/Block.hpp" line="5" column="1"/>
  </compounddef>
</doxygen>
