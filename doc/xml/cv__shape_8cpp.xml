<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="cv__shape_8cpp" kind="file">
    <compoundname>cv_shape.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <includes local="no">opencv2/imgproc/imgproc.hpp</includes>
    <includes local="no">string</includes>
    <includes refid="definitions_8hpp" local="yes">definitions.hpp</includes>
    <includes refid="PiCamera_8hpp" local="yes">PiCamera.hpp</includes>
    <incdepgraph>
      <node id="255">
        <label>definitions.hpp</label>
        <link refid="definitions_8hpp"/>
      </node>
      <node id="258">
        <label>raspicam/raspicam_cv.h</label>
      </node>
      <node id="257">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="254">
        <label>string</label>
      </node>
      <node id="253">
        <label>opencv2/imgproc/imgproc.hpp</label>
      </node>
      <node id="259">
        <label>unistd.h</label>
      </node>
      <node id="252">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="251">
        <label>iostream</label>
      </node>
      <node id="250">
        <label>src/cv_shape.cpp</label>
        <link refid="cv_shape.cpp"/>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
      </node>
      <node id="256">
        <label>PiCamera.hpp</label>
        <link refid="PiCamera_8hpp"/>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cv__shape_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This program (a single function) is a test of the computer vision algorithms for loading the blocks. It will likely be in development for some time to come. The plan currently is to develop and test all CV algorithms for block loading here before moving it all into class functions and testing again.</para><para>This code is based on several online articles:<itemizedlist>
<listitem><para>&quot;Color Detectionn &amp; Object Tracking&quot; by Shermal Fernando (<ulink url="http://opencv-srf.blogspot.com/2010/09/object-detection-using-color-seperation.html">http://opencv-srf.blogspot.com/2010/09/object-detection-using-color-seperation.html</ulink>)</para></listitem><listitem><para>&quot;Shape Detection &amp; Tracking using Contours&quot; by Shermal Fernando (<ulink url="http://opencv-srf.blogspot.com/2011/09/object-detection-tracking-using-contours.html">http://opencv-srf.blogspot.com/2011/09/object-detection-tracking-using-contours.html</ulink>)</para></listitem><listitem><para>&quot;Creating Bounding boxes and circles for contours&quot; in the OpenCV 2.4 Tutorials (<ulink url="http://opencv-srf.blogspot.com/2011/09/object-detection-tracking-using-contours.html">http://opencv-srf.blogspot.com/2011/09/object-detection-tracking-using-contours.html</ulink>) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pi/chip-chip-array/src/cv_shape.cpp" line="30" column="1" bodyfile="/home/pi/chip-chip-array/src/cv_shape.cpp" bodystart="30" bodyend="120"/>
        <references refid="classChipChipArray_1_1PiCamera_1a58fb0de02570dce9a9cb60a1a04fb84f" compoundref="PiCamera_8hpp" startline="61" endline="69">ChipChipArray::PiCamera::Snap</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/imgproc/imgproc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="definitions_8hpp" kindref="compound">definitions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="PiCamera_8hpp" kindref="compound">PiCamera.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceChipChipArray" kindref="compound">ChipChipArray</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecv" kindref="compound">cv</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="cv__shape_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceChipChipArray_1a7fc3d1edffca11531cd09fdab7c8b88d" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classChipChipArray_1_1PiCamera" kindref="compound">PiCamera</ref><sp/>cam;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>control<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Settings&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>winThresh<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>Threshold&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>winContours<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Contours<sp/>Detected&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>control<sp/>(trackbar)<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowH<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>hue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highH<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowS<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>saturation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highS<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowV<sp/>=<sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highV<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>polyEps<sp/>=<sp/>3;<sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>dif<sp/>b/t<sp/>bin<sp/>shape<sp/>edge<sp/>&amp;<sp/>est<sp/>poly<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opening<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>namedWindow(control,<sp/>CV_WINDOW_AUTOSIZE);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>namedWindow(winThresh,<sp/>CV_WINDOW_AUTOSIZE);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>namedWindow(winContours,<sp/>CV_WINDOW_AUTOSIZE);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>creating<sp/>control<sp/>trackbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>createTrackbar(</highlight><highlight class="stringliteral">&quot;Hue<sp/>Min&quot;</highlight><highlight class="normal">,<sp/>control,<sp/>&amp;lowH,<sp/>highH);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>createTrackbar(</highlight><highlight class="stringliteral">&quot;Hue<sp/>Max&quot;</highlight><highlight class="normal">,<sp/>control,<sp/>&amp;highH,<sp/>highH);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>createTrackbar(</highlight><highlight class="stringliteral">&quot;Sat<sp/>Min&quot;</highlight><highlight class="normal">,<sp/>control,<sp/>&amp;lowS,<sp/>highS);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>createTrackbar(</highlight><highlight class="stringliteral">&quot;Sat<sp/>Max&quot;</highlight><highlight class="normal">,<sp/>control,<sp/>&amp;highS,<sp/>highS);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>createTrackbar(</highlight><highlight class="stringliteral">&quot;Val<sp/>Min&quot;</highlight><highlight class="normal">,<sp/>control,<sp/>&amp;lowV,<sp/>highV);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>createTrackbar(</highlight><highlight class="stringliteral">&quot;Val<sp/>Max&quot;</highlight><highlight class="normal">,<sp/>control,<sp/>&amp;highV,<sp/>highV);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>createTrackbar(</highlight><highlight class="stringliteral">&quot;Polygon<sp/>Epsilon&quot;</highlight><highlight class="normal">,<sp/>control,<sp/>&amp;polyEps,<sp/>20);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mat<sp/>imgOrig<sp/>=<sp/>cam.<ref refid="classChipChipArray_1_1PiCamera_1a58fb0de02570dce9a9cb60a1a04fb84f" kindref="member">Snap</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>real<sp/>iage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mat<sp/>imgHSV;<sp/><sp/></highlight><highlight class="comment">//<sp/>RGB<sp/>image<sp/>converted<sp/>to<sp/>HSV<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mat<sp/>imgThresh;<sp/><sp/></highlight><highlight class="comment">//<sp/>binary<sp/>threshold<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvtColor(imgOrig,<sp/>imgHSV,<sp/>COLOR_BGR2HSV);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>binary<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inRange(imgHSV,<sp/>Scalar(lowH,<sp/>lowS,<sp/>lowV),<sp/>Scalar(highH,<sp/>highS,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highV),<sp/>imgThresh);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Not<sp/>quite<sp/>sure<sp/>what<sp/>all<sp/>this<sp/>does,<sp/>but<sp/>it<sp/>seems<sp/>to</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>relate<sp/>to<sp/>smoothing<sp/>the<sp/>image</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>erode(imgThresh,<sp/>imgThresh,<sp/>getStructuringElement(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MORPH_ELLIPSE,<sp/><ref refid="definitions_8hpp_1a9809446fd16a744b6df9808293f14153" kindref="member">cv::Size</ref>(5,<sp/>5)));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dilate(imgThresh,<sp/>imgThresh,<sp/>getStructuringElement(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MORPH_ELLIPSE,<sp/><ref refid="definitions_8hpp_1a9809446fd16a744b6df9808293f14153" kindref="member">cv::Size</ref>(5,<sp/>5)));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dilate(imgThresh,<sp/>imgThresh,<sp/>getStructuringElement(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MORPH_ELLIPSE,<sp/><ref refid="definitions_8hpp_1a9809446fd16a744b6df9808293f14153" kindref="member">cv::Size</ref>(5,<sp/>5)));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>erode(imgThresh,<sp/>imgThresh,<sp/>getStructuringElement(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MORPH_ELLIPSE,<sp/><ref refid="definitions_8hpp_1a9809446fd16a744b6df9808293f14153" kindref="member">cv::Size</ref>(5,<sp/>5)));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>binary<sp/>image<sp/>in<sp/>threshold<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imshow(winThresh,<sp/>imgThresh);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>contours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;Point&gt;&gt;<sp/>contours;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>findContours(imgThresh,<sp/>contours,<sp/>CV_RETR_TREE,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CV_CHAIN_APPROX_SIMPLE,<sp/>Point(0,<sp/>0));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vector&lt;Point&gt;&gt;<sp/>contours_poly(contours.size());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;Rect&gt;<sp/>bounds(contours.size());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxArea<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>rectangle<sp/>around<sp/>polygon-ish<sp/>shapes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>contours.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>approxPolyDP(Mat(contours[i]),<sp/>contours_poly[i],</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polyEps,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounds[i]<sp/>=<sp/>boundingRect(Mat(contours_poly[i]));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Draw<sp/>surrounding<sp/>rectangles<sp/>from<sp/>above<sp/>on<sp/>original</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>image.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>contours.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//rectangle(imgOrig,<sp/>bounds[i].tl(),<sp/>bounds[i].br(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Scalar(255,<sp/>0,<sp/>0),<sp/>2,<sp/>8,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawContours(imgOrig,<sp/>contours_poly,<sp/>i,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scalar(255,<sp/>0,<sp/>0),<sp/>4,<sp/>8);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>area<sp/>=<sp/>bounds[i].width<sp/>*<sp/>bounds[i].height;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(area<sp/>&gt;<sp/>maxArea)<sp/>maxArea<sp/>=<sp/>area;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Block<sp/>area:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxArea<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>pixels&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imshow(winContours,<sp/>imgOrig);<sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>original<sp/>image<sp/>with<sp/>rectangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitKey(50);<sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>to<sp/>be<sp/>here<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/pi/chip-chip-array/src/cv_shape.cpp"/>
  </compounddef>
</doxygen>
