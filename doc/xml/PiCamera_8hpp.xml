<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="PiCamera_8hpp" kind="file">
    <compoundname>PiCamera.hpp</compoundname>
    <includes local="no">opencv2/core/core.hpp</includes>
    <includes local="no">opencv2/highgui/highgui.hpp</includes>
    <includes local="no">raspicam/raspicam_cv.h</includes>
    <includes local="no">unistd.h</includes>
    <includedby refid="cv__hue_8cpp" local="yes">src/cv_hue.cpp</includedby>
    <includedby refid="cv__shape_8cpp" local="yes">src/cv_shape.cpp</includedby>
    <includedby refid="Grabber_8hpp" local="yes">src/Grabber.hpp</includedby>
    <includedby refid="net__qr__test_8cpp" local="yes">src/net_qr_test.cpp</includedby>
    <includedby refid="qr__test_8cpp" local="yes">src/qr_test.cpp</includedby>
    <includedby refid="ScanQR_8hpp" local="yes">src/ScanQR.hpp</includedby>
    <incdepgraph>
      <node id="356">
        <label>raspicam/raspicam_cv.h</label>
      </node>
      <node id="354">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="357">
        <label>unistd.h</label>
      </node>
      <node id="355">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="353">
        <label>src/PiCamera.hpp</label>
        <link refid="PiCamera.hpp"/>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="362">
        <label>src/cv_test.cpp</label>
        <link refid="cv__test_8cpp"/>
      </node>
      <node id="364">
        <label>src/qr_test.cpp</label>
        <link refid="qr__test_8cpp"/>
      </node>
      <node id="359">
        <label>src/cv_hue.cpp</label>
        <link refid="cv__hue_8cpp"/>
      </node>
      <node id="361">
        <label>src/Grabber.hpp</label>
        <link refid="Grabber_8hpp"/>
        <childnode refid="362" relation="include">
        </childnode>
      </node>
      <node id="360">
        <label>src/cv_shape.cpp</label>
        <link refid="cv__shape_8cpp"/>
      </node>
      <node id="365">
        <label>src/ScanQR.hpp</label>
        <link refid="ScanQR_8hpp"/>
        <childnode refid="364" relation="include">
        </childnode>
      </node>
      <node id="358">
        <label>src/PiCamera.hpp</label>
        <link refid="PiCamera.hpp"/>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
      <node id="363">
        <label>src/net_qr_test.cpp</label>
        <link refid="net__qr__test_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classChipChipArray_1_1PiCamera" prot="public">ChipChipArray::PiCamera</innerclass>
    <innernamespace refid="namespaceChipChipArray">ChipChipArray</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PiCamera_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PiCamera_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/core/core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/highgui/highgui.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raspicam/raspicam_cv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceChipChipArray" kindref="compound">ChipChipArray</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classChipChipArray_1_1PiCamera" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classChipChipArray_1_1PiCamera" kindref="compound">PiCamera</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21" refid="classChipChipArray_1_1PiCamera_1a5910a3284877677decb6529d88e43487" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classChipChipArray_1_1PiCamera_1a5910a3284877677decb6529d88e43487" kindref="member">PiCamera</ref>()<sp/>:<sp/><ref refid="classChipChipArray_1_1PiCamera" kindref="compound">PiCamera</ref>(true)<sp/>{};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classChipChipArray_1_1PiCamera_1a5910a3284877677decb6529d88e43487" kindref="member">PiCamera</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useColor);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChipChipArray_1_1PiCamera_1a38f8205921d6deec5a2c360ea7d24cc5" kindref="member">Close</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/><ref refid="classChipChipArray_1_1PiCamera_1a58fb0de02570dce9a9cb60a1a04fb84f" kindref="member">Snap</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raspicam::RaspiCam_Cv<sp/>cam;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classChipChipArray_1_1PiCamera_1a0a4480e9e7475ae7af9a7523239caf8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classChipChipArray_1_1PiCamera_1a5910a3284877677decb6529d88e43487" kindref="member">PiCamera::PiCamera</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useColor)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.set(CV_CAP_PROP_FORMAT,<sp/>(useColor<sp/>?<sp/>CV_16UC3<sp/>:<sp/>CV_16UC1));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.open();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usleep(500000);<sp/><sp/></highlight><highlight class="comment">//<sp/>required<sp/>to<sp/>allow<sp/>camera<sp/>time<sp/>to<sp/>adjust!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classChipChipArray_1_1PiCamera_1a38f8205921d6deec5a2c360ea7d24cc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChipChipArray_1_1PiCamera_1a38f8205921d6deec5a2c360ea7d24cc5" kindref="member">PiCamera::Close</ref>()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.release();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classChipChipArray_1_1PiCamera_1a58fb0de02570dce9a9cb60a1a04fb84f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/><ref refid="classChipChipArray_1_1PiCamera_1a58fb0de02570dce9a9cb60a1a04fb84f" kindref="member">PiCamera::Snap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!cam.isOpened())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Camera<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>not<sp/>open!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>image;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.grab();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cam.retrieve(image);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>image;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/pi/chip-chip-array/src/PiCamera.hpp"/>
  </compounddef>
</doxygen>
